name: CI Deploy

on: 
  push:
    branches: [ dev ]

jobs:
  bump-version:
    runs-on: self-hosted

    steps:
      - name: Version Bump
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          chmod +x bump-version.sh
          ./bump-version.sh git
          git config user.email "CI@noreply.com"
          git config user.name "CI"
          git add frontend/package.json
          git commit -m "[CI] bump version to $VERSION [ci skip]"
          git push -u origin
          ./bump-version.sh build

  build-frontend:
    runs-on: self-hosted
    needs: [ bump-version ]
    strategy:
      matrix:
        node-version: [ 16 ]

    steps:
      - name: Building frontend and copy source files
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          cd frontend
          cat package.json
          npm install
          npm run build
          npm run gulp
          rm -rf ~/app
          mkdir -p ~/app
          cp -r dist/frontend/ ~/app

  build-backend:
    runs-on: self-hosted
    needs: [ build-frontend ]

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
  
      - name: Building backend and copy source files
        uses: actions/checkout@v2
      - run: |
          cd backend
          chmod +x gradlew
          ./gradlew build
          mkdir -p ~/app
          mv build/libs/spotify*.jar ~/app/backend.jar

  docker-setup:
    runs-on: self-hosted
    needs: [ build-backend ]
    steps:
      - name: copy docker source files
        uses: actions/checkout@v2
      - run: |
          cp -r docker/* ~/app

  deploy:
      runs-on: self-hosted
      needs: [ docker-setup ]
      steps:
        - name: Deployment
          run: |
            cd ~/app
            sudo docker ps -a -q | xargs -r sudo docker rm -f
            sudo docker system prune -a -f
            sudo docker-compose -f docker-compose-prod.yml down
            sudo docker-compose -f docker-compose-prod.yml up --force-recreate -d
